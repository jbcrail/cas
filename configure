#!/bin/bash

function get_os_version
{
    UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown
    UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown
    UNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown
    UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown

    case "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" in
        i*86:Linux*:*:*)
            OS_VERSION="linux";;

        x86_64:Linux*:*:*)
            OS_VERSION="linux64";;

        x86_64:Darwin:*:*)
            OS_VERSION="osx";;

        *)
            OS_VERSION="unknown";;
    esac
}

################################################################################

INSTALLPATH=$(pwd)/bin

################################################################################

echo -n "checking host system type... "

get_os_version

echo "${OS_VERSION}"

SUB_VARS="s|@INSTALLPATH@|${INSTALLPATH}|"

for FILE in $(find . -name Makefile.in)
do
    old_file=${FILE}
    new_file=${old_file%.in}
    new_file=${new_file#\./}

    echo "creating ${new_file}"
    sed -e "${SUB_VARS}" ${old_file} > ${new_file}
done
